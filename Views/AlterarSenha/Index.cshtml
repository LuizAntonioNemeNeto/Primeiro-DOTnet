@using Sisteminha.Enums
@model AlterarSenhaModel
@{
    ViewData["Title"] = "Alterar Senha";
}
<h1>Alterar Senha</h1>

@if (TempData["MensagemSucesso"] != null)
{
    <Center>
        <div class="alert alert-success" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" aria-label="Close">X</button>
            @TempData["MensagemSucesso"]
        </div>
    </Center>
}

@if (TempData["MensagemErro"] != null)
{
    <Center>
        <div class="alert alert-danger" role="alert">
            <button type="button" class="btn btn-danger btn-sm close-alert" aria-label="Close">X</button>
            @TempData["MensagemErro"]
        </div>
    </Center>
}

<form asp-controller="AlterarSenha" asp-action="Alterar" method="post">
    
    <div class="form-group">
        <label for="senhaAtual">Senha Atual</label>
        <input type="password" asp-for="SenhaAtual" class="form-control" placeholder="Digite a atual Senha">
        @Html.ValidationMessageFor(x => x.SenhaAtual)
    </div>
    <div class="form-group">
        <label for="novaSenha">Nova Senha</label>
        <input type="password" asp-for="NovaSenha" class="form-control" placeholder="Digite a nova Senha">
        @Html.ValidationMessageFor(x => x.NovaSenha)
    </div>
        <div class="form-group">
        <label for="confirmarSenha">Confirmar nova Senha</label>
        <input type="password" asp-for="ConfirmarNovaSenha" class="form-control" placeholder="Confirme a nova Senha">
        @Html.ValidationMessageFor(x => x.ConfirmarNovaSenha)
    </div>
    <br>
    <button type="submit" class="btn btn-primary">Alterar</button>
    <a class="btn btn-secondary" asp-controller="Home" asp-action="Index" role="button">Voltar</a>
</form>